---
- hosts: all
  gather_facts: no

  tasks:

  - name: DBG MSG
    debug:
      msg: 'dbg mode: {{ "true" | bool }}'
    tags: dbg,msg

  - name: Install tools and prereqs
    apt: pkg={{ item }} state=present update_cache=yes cache_valid_time=3600
    with_items: '{{ pkg_prereqs }}'
    tags: prereqs

  - name: Prepare trust docker.com gpg signature
    ansible.builtin.shell:
      cmd: curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o - > {{ docker_signature_file }}
    tags: docker

  - name: Prepare docker apt sources list
    ansible.builtin.shell:
      cmd: echo "deb [arch=$(dpkg --print-architecture) signed-by={{ docker_signature_file }}] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    tags: docker

  - name: install docker
    apt: pkg={{ item }} state=present allow_downgrade=True update_cache=yes
    with_items:
    - docker-ce=5:20.10.14~3-0~debian-bullseye
    - docker-ce-cli=5:20.10.14~3-0~debian-bullseye
    - containerd.io
    - apt-transport-https
    tags: docker

  - name: Prepare trust k8s gpg signature
    ansible.builtin.shell:
      cmd: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add
    tags: k8s

  - name: Prepare k8s apt sources list
    ansible.builtin.shell:
      cmd: echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list
    tags: k8s

  - name: install k8s
    apt: pkg={{ item }} state=present allow_downgrade=True update_cache=yes
    with_items:
    - kubelet=1.23.5-00
    - kubeadm=1.23.5-00
    - kubectl=1.23.5-00
    - kubernetes-cni=0.8.7-00
    tags: k8s

  - name: set /etc/docker/daemon.json
    ansible.builtin.copy:
      src: etc-docker-daemon.json
      dest: /etc/docker/daemon.json
    notify:
      - restart docker
    tags: daemon4k8s

  - name: ensure docker is running and enabled
    service: name=docker state=started enabled=yes
    tags: daemon4k8s


- hosts: master
  gather_facts: no

  tasks:

  - name: init k8s cluster on master
    ansible.builtin.shell:
      cmd: kubeadm init --pod-network-cidr=10.244.0.0/16
    tags: initk8s

  - name: generate k8s join token
    ansible.builtin.shell: kubeadm token create --print-join-command
    register: join_cmd
    tags: initk8s


- hosts: workers
  gather_facts: no

  tasks:

  - name: join workers to k8s cluster
    ansible.builtin.shell:
      cmd: sh -c "{{ hostvars[ groups.master[0] ]['join_cmd']['stdout_lines'][0] }}"
    tags: initk8s

  - name: Transfer /etc/kubernetes/admin.conf to workers
    synchronize:
      src: /etc/kubernetes/admin.conf
      dest: /etc/kubernetes/admin.conf
    delegate_to: "{{ groups.master[0] }}"
    tags: admink8s


- hosts: all
  gather_facts: no

  tasks:

  - name: env KUBECONFIG
    lineinfile: dest=/root/.bashrc line='export KUBECONFIG=/etc/kubernetes/admin.conf' state=present
    tags: admink8s


- hosts: master
  gather_facts: no

  tasks:

  - name: deliver flannel files
    ansible.builtin.copy:
      src: kube-flannel.yml
      dest: /tmp/kube-flannel.yml
    tags: b4flannel

  - name: deliver flannel files
    ansible.builtin.copy:
      src: kube-flannel-rbac.yml
      dest: /tmp/kube-flannel-rbac.yml
    tags: b4flannel

  - name: flannel install
    ansible.builtin.shell:
      cmd: kubectl apply -f /tmp/kube-flannel.yml
    tags: flannel

  - name: flannel rbac
    ansible.builtin.shell:
      cmd: kubectl apply -f /tmp/kube-flannel-rbac.yml
    tags: flannel

